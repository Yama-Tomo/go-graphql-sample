// Code generated by entc, DO NOT EDIT.

package petattribute

import (
	"time"
)

const (
	// Label holds the string label denoting the petattribute type in the database.
	Label = "pet_attribute"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"

	// EdgePet holds the string denoting the pet edge name in mutations.
	EdgePet = "pet"

	// Table holds the table name of the petattribute in the database.
	Table = "pet_attributes"
	// PetTable is the table the holds the pet relation/edge.
	PetTable = "pet_attributes"
	// PetInverseTable is the table name for the Pet entity.
	// It exists in this package in order to avoid circular dependency with the "pet" package.
	PetInverseTable = "pets"
	// PetColumn is the table column denoting the pet relation/edge.
	PetColumn = "pet_attributes"
)

// Columns holds all SQL columns for petattribute fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldUpdatedAt,
	FieldCreatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the PetAttribute type.
var ForeignKeys = []string{
	"pet_attributes",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
